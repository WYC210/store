{"version":3,"file":"js/376.89c84ea9.js","mappings":"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","sources":["webpack://store/./src/api/user.js","webpack://store/./src/views/profile/index.vue","webpack://store/./src/views/profile/index.vue?ca4f"],"sourcesContent":["import request from '@/utils/request'\n\n// 登录\nexport const login = async ({ username, password }) => {\n  if (!username?.trim() || !password) {\n    throw new Error('用户名和密码不能为空')\n  }\n  \n  return request({\n    url: '/users/login',\n    method: 'post',\n    data: {\n      username: username.trim(),\n      password\n    },\n    withCredentials: true,\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'XMLHttpRequest'\n    }\n  })\n}\n\n// 注册\nexport const register = async (userData) => {\n  const { username, password, email } = userData\n  \n  if (!username?.trim() || !password || !email?.trim()) {\n    throw new Error('请填写完整的注册信息')\n  }\n  \n  return request({\n    url: '/users/reg',\n    method: 'post',\n    data: {\n      username: username.trim(),\n      password,\n      email: email.trim()\n    },\n    withCredentials: true,\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'XMLHttpRequest'\n    }\n  })\n}\n\n// 获取用户信息\nexport function getUserInfo() {\n  return request({\n    url: '/users/info',\n    method: 'get',\n    withCredentials: true,\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    }\n  })\n}\n\n// 更新用户信息\nexport function updateUserInfo(data) {\n  return request({\n    url: '/users/update',\n    method: 'patch',\n    data: {\n      phone: data.phone,\n      email: data.email,\n      gender: data.gender\n    },\n    withCredentials: true,\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'XMLHttpRequest'\n    }\n  })\n}\n\n// 更新密码\nexport const updatePassword = (data) => {\n  return request({\n    url: '/users/password',\n    method: 'patch',\n    data: {\n      oldPassword: data.oldPassword,\n      newPassword: data.newPassword\n    },\n    withCredentials: true,\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'XMLHttpRequest'\n    }\n  })\n}\n\n// 更新头像\nexport const updateAvatar = async (file) => {\n  if (!file || !(file instanceof File)) {\n    throw new Error('请选择有效的图片文件')\n  }\n  \n  const formData = new FormData()\n  formData.append('avatar', file)\n  \n  return request({\n    url: '/users/avatar',\n    method: 'patch',\n    data: formData,\n    withCredentials: true,\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      'X-Requested-With': 'XMLHttpRequest'\n    }\n  })\n}\n\n// 获取用户信息和权限\nexport const getUserData = async (userId) => {\n  if (!userId) {\n    throw new Error('用户ID不能为空')\n  }\n  \n  try {\n    const [userInfo, permissions] = await Promise.all([\n      request({\n        url: `/users/${userId}/info`,\n        method: 'get'\n      }),\n      request({\n        url: `/users/${userId}/permissions`,\n        method: 'get'\n      })\n    ])\n    \n    return {\n      userInfo: userInfo?.data,\n      permissions: permissions?.data?.permissions ?? []\n    }\n  } catch (error) {\n    console.error('获取用户数据失败:', error)\n    throw error\n  }\n}\n\n// 批量操作工具函数\nexport const batchUserOperations = async (operations) => {\n  if (!Array.isArray(operations) || !operations.length) {\n    return []\n  }\n  \n  try {\n    const results = await Promise.allSettled(\n      operations.map(async ({ type, data }) => {\n        switch (type) {\n          case 'update':\n            return request({\n              url: '/users/update',\n              method: 'put',\n              data\n            })\n          case 'delete':\n            return request({\n              url: `/users/${data.userId}`,\n              method: 'delete'\n            })\n          default:\n            throw new Error(`未知的操作类型: ${type}`)\n        }\n      })\n    )\n    \n    return results\n      .map((result, index) => ({\n        operation: operations[index],\n        success: result.status === 'fulfilled',\n        data: result.status === 'fulfilled' ? result.value : null,\n        error: result.status === 'rejected' ? result.reason : null\n      }))\n  } catch (error) {\n    console.error('批量操作失败:', error)\n    throw error\n  }\n} ","<template>\n  <div class=\"profile-container\">\n    <el-card class=\"profile-card\">\n      <div class=\"profile-header\">\n        <div class=\"avatar-container\">\n          <el-upload\n            class=\"avatar-uploader\"\n            action=\"/api/users/avatar\"\n            :show-file-list=\"false\"\n            :on-success=\"handleAvatarSuccess\"\n            :before-upload=\"beforeAvatarUpload\"\n          >\n            <el-avatar \n              :size=\"100\" \n              :src=\"userStore.userInfo?.avatar || '/default-avatar.png'\"\n            />\n            <div class=\"avatar-hover-text\">点击更换头像</div>\n          </el-upload>\n        </div>\n        <h2>个人中心</h2>\n      </div>\n\n      <div class=\"profile-content\">\n        <el-form \n          ref=\"formRef\"\n          :model=\"userForm\"\n          :rules=\"rules\"\n          label-width=\"120px\"\n        >\n          <el-descriptions :column=\"1\" border>\n            <el-descriptions-item label=\"用户ID\">\n              {{ userStore.userInfo?.uid }}\n            </el-descriptions-item>\n            \n            <el-descriptions-item label=\"用户名\">\n              {{ userStore.userInfo?.username }}\n            </el-descriptions-item>\n\n            <el-descriptions-item label=\"用户权限\">\n              {{ userStore.userInfo?.power === 'admin' ? '管理员' : '普通用户' }}\n            </el-descriptions-item>\n\n            <el-descriptions-item label=\"手机号码\">\n              {{ userStore.userInfo?.phone || '暂未设置' }}\n            </el-descriptions-item>\n            \n            <el-descriptions-item label=\"邮箱\">\n              {{ userStore.userInfo?.email || '暂未设置' }}\n            </el-descriptions-item>\n            \n            <el-descriptions-item label=\"性别\">\n              {{ formatGender(userStore.userInfo?.gender) }}\n            </el-descriptions-item>\n\n            <el-descriptions-item label=\"注册时间\">\n              {{ formatDate(userStore.userInfo?.createdTime) }}\n            </el-descriptions-item>\n          </el-descriptions>\n\n          <!-- 编辑表单，默认隐藏 -->\n          <div v-if=\"isEditing\" class=\"edit-form\">\n            <el-form-item label=\"手机号码\" prop=\"phone\">\n              <el-input \n                v-model=\"userForm.phone\"\n                placeholder=\"请输入手机号码\"\n              />\n            </el-form-item>\n\n            <el-form-item label=\"邮箱\" prop=\"email\">\n              <el-input \n                v-model=\"userForm.email\"\n                placeholder=\"请输入邮箱\"\n              />\n            </el-form-item>\n\n            <el-form-item label=\"性别\">\n              <el-radio-group v-model=\"userForm.gender\">\n                <el-radio :label=\"1\">男</el-radio>\n                <el-radio :label=\"2\">女</el-radio>\n                <el-radio :label=\"0\">保密</el-radio>\n              </el-radio-group>\n            </el-form-item>\n          </div>\n\n          <div class=\"action-buttons\">\n            <el-button \n              type=\"primary\" \n              @click=\"handleEdit\" \n              v-if=\"!isEditing\"\n            >\n              编辑资料\n            </el-button>\n            <template v-else>\n              <el-button \n                type=\"primary\" \n                @click=\"handleSave\" \n                :loading=\"loading\"\n              >\n                保存\n              </el-button>\n              <el-button @click=\"cancelEdit\">\n                取消\n              </el-button>\n            </template>\n\n            <el-button type=\"primary\" @click=\"showPasswordDialog\">\n              修改密码\n            </el-button>\n            <el-button type=\"danger\" @click=\"handleLogout\">\n              退出登录\n            </el-button>\n          </div>\n        </el-form>\n      </div>\n    </el-card>\n\n    <!-- 修改密码对话框 -->\n    <el-dialog\n      v-model=\"passwordDialog.visible\"\n      title=\"修改密码\"\n      width=\"400px\"\n    >\n      <el-form\n        ref=\"passwordFormRef\"\n        :model=\"passwordForm\"\n        :rules=\"passwordRules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"原密码\" prop=\"oldPassword\">\n          <el-input\n            v-model=\"passwordForm.oldPassword\"\n            type=\"password\"\n            show-password\n            placeholder=\"请输入原密码\"\n          />\n        </el-form-item>\n        <el-form-item label=\"新密码\" prop=\"newPassword\">\n          <el-input\n            v-model=\"passwordForm.newPassword\"\n            type=\"password\"\n            show-password\n            placeholder=\"请输入新密码\"\n          />\n        </el-form-item>\n        <el-form-item label=\"确认新密码\" prop=\"confirmPassword\">\n          <el-input\n            v-model=\"passwordForm.confirmPassword\"\n            type=\"password\"\n            show-password\n            placeholder=\"请再次输入新密码\"\n          />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"passwordDialog.visible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"handlePasswordChange\" :loading=\"passwordDialog.loading\">\n            确认修改\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, ref, reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useUserStore } from '@/stores/user'\nimport { ElMessage } from 'element-plus'\nimport { getCookie, removeCookie } from '@/utils/cookie'\nimport { updateUserInfo, updatePassword } from '@/api/user' // 需要添加这些API\n\nconst router = useRouter()\nconst userStore = useUserStore()\nconst loading = ref(false)\nconst formRef = ref(null)\nconst passwordFormRef = ref(null)\n\n// 用户表单数据\nconst userForm = reactive({\n  phone: userStore.userInfo?.phone || '',\n  email: userStore.userInfo?.email || '',\n  gender: userStore.userInfo?.gender || 0\n})\n\n// 表单验证规则\nconst rules = {\n  email: [\n    { required: true, message: '请输入邮箱地址', trigger: 'blur' },\n    { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\n  ],\n  phone: [\n    { required: true, message: '请输入手机号', trigger: 'blur' },\n    { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号', trigger: 'blur' }\n  ]\n}\n\n// 密码修改对话框\nconst passwordDialog = reactive({\n  visible: false,\n  loading: false\n})\n\n// 密码表单\nconst passwordForm = ref({\n  oldPassword: '',\n  newPassword: '',\n  confirmPassword: ''\n})\n\n// 密码验证规则\nconst passwordRules = {\n  oldPassword: [\n    { required: true, message: '请输入原密码', trigger: 'blur' },\n    { min: 6, max: 20, message: '密码长度在 6 到 20 个字符', trigger: 'blur' }\n  ],\n  newPassword: [\n    { required: true, message: '请输入新密码', trigger: 'blur' },\n    { min: 6, max: 20, message: '密码长度在 6 到 20 个字符', trigger: 'blur' },\n    { \n      validator: (rule, value, callback) => {\n        if (value === passwordForm.value.oldPassword) {\n          callback(new Error('新密码不能与原密码相同'))\n        } else {\n          callback()\n        }\n      },\n      trigger: 'blur'\n    }\n  ],\n  confirmPassword: [\n    { required: true, message: '请确认新密码', trigger: 'blur' },\n    {\n      validator: (rule, value, callback) => {\n        if (value !== passwordForm.value.newPassword) {\n          callback(new Error('两次输入的密码不一致'))\n        } else {\n          callback()\n        }\n      },\n      trigger: ['blur', 'change']\n    }\n  ]\n}\n\n// 格式化日期\nconst formatDate = (date) => {\n  if (!date) return '暂无数据'\n  return new Date(date).toLocaleString('zh-CN', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  })\n}\n\n// 显示修改密码对话框\nconst showPasswordDialog = () => {\n  passwordDialog.visible = true\n  passwordForm.oldPassword = ''\n  passwordForm.newPassword = ''\n  passwordForm.confirmPassword = ''\n}\n\n// 添加编辑状态控制\nconst isEditing = ref(false)\n\n// 格式化性别显示\nconst formatGender = (gender) => {\n  switch (gender) {\n    case 1:\n      return '男'\n    case 2:\n      return '女'\n    case 0:\n    default:\n      return '保密'\n  }\n}\n\n// 处理编辑按钮点击\nconst handleEdit = () => {\n  isEditing.value = true\n  // 初始化表单数据\n  userForm.phone = userStore.userInfo?.phone || ''\n  userForm.email = userStore.userInfo?.email || ''\n  userForm.gender = userStore.userInfo?.gender || 0\n}\n\n// 取消编辑\nconst cancelEdit = () => {\n  isEditing.value = false\n  // 重置表单数据\n  userForm.phone = userStore.userInfo?.phone || ''\n  userForm.email = userStore.userInfo?.email || ''\n  userForm.gender = userStore.userInfo?.gender || 0\n}\n\n// 修改保存处理函数\nconst handleSave = async () => {\n  try {\n    loading.value = true\n    \n    // 表单验证\n    await formRef.value.validate()\n    \n    // 发送更新请求\n    const response = await updateUserInfo({\n      phone: userForm.phone,\n      email: userForm.email,\n      gender: userForm.gender\n    })\n    \n    if (response.state === 200) {\n      ElMessage.success('保存成功')\n      // 更新本地用户信息\n      userStore.setUserInfo(response.data)\n    } else {\n      throw new Error(response.message || '更新用户信息失败')\n    }\n  } catch (error) {\n    console.error('Save error:', error)\n    if (error.response?.data?.state === 400) {\n      ElMessage.warning(error.response.data.message)\n    } else {\n      ElMessage.error(error.message || '保存失败')\n    }\n  } finally {\n    loading.value = false\n  }\n}\n\n// 修改密码\nconst handlePasswordChange = async () => {\n  try {\n    await passwordFormRef.value.validate()\n    \n    if (passwordForm.value.newPassword !== passwordForm.value.confirmPassword) {\n      ElMessage.error('两次输入的新密码不一致')\n      return\n    }\n    \n    console.log('Password update request data:', {\n      url: '/users/password',\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'AUTH-TOKEN': getCookie('token')\n      },\n      data: {\n        oldPassword: passwordForm.value.oldPassword,\n        newPassword: passwordForm.value.newPassword\n      }\n    })\n\n    const response = await updatePassword({\n      oldPassword: passwordForm.value.oldPassword,\n      newPassword: passwordForm.value.newPassword\n    })\n\n    console.log('Password update response:', response)\n\n    if (response.state === 200) {\n      ElMessage.success('密码修改成功')\n      passwordDialog.visible = false\n      passwordForm.value = {\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      }\n    }\n  } catch (error) {\n    console.log('Password update error:', {\n      error,\n      response: error.response?.data,\n      message: error.message\n    })\n    \n    if (error.response?.data?.message) {\n      ElMessage.error(error.response.data.message)\n    } else if (error.message) {\n      ElMessage.error(error.message)\n    } else {\n      ElMessage.error('修改密码失败，请重试')\n    }\n  }\n}\n\n// 头像上传前的验证\nconst beforeAvatarUpload = (file) => {\n  const isJPG = file.type === 'image/jpeg' || file.type === 'image/png'\n  const isLt2M = file.size / 1024 / 1024 < 2\n\n  if (!isJPG) {\n    ElMessage.error('头像只能是 JPG 或 PNG 格式!')\n  }\n  if (!isLt2M) {\n    ElMessage.error('头像大小不能超过 2MB!')\n  }\n  return isJPG && isLt2M\n}\n\n// 头像上传成功的回调\nconst handleAvatarSuccess = (response) => {\n  if (response.state === 200) {\n    userStore.setUserInfo({\n      ...userStore.userInfo,\n      avatar: response.data.avatar\n    })\n    ElMessage.success('头像更新成功')\n  } else {\n    ElMessage.error('头像更新失败')\n  }\n}\n\n// 退出登录\nconst handleLogout = async () => {\n  try {\n    await userStore.logout()\n    ElMessage.success('退出成功')\n    router.push('/login')\n  } catch (error) {\n    console.error('Logout failed:', error)\n    ElMessage.error('退出失败')\n  }\n}\n\n// 检查登录状态并获取用户信息\nasync function checkAuth() {\n  try {\n    const userStore = useUserStore()\n    loading.value = true\n\n    // 先检查本地状态\n    if (userStore.isLoggedIn) {\n      // 更新表单数据\n      updateFormData(userStore.userInfo)\n      return true\n    }\n\n    // 尝试验证 token\n    try {\n      const isValid = await userStore.validateToken()\n      if (!isValid) {\n        throw new Error('验证失败')\n      }\n      // 验证成功后更新表单数据\n      updateFormData(userStore.userInfo)\n      return true\n    } catch (error) {\n      ElMessage.warning('请先登录')\n      router.push('/login')\n      throw new Error('未登录')\n    }\n  } catch (error) {\n    console.error('Auth check failed:', error)\n    removeCookie('token')\n    throw error\n  } finally {\n    loading.value = false\n  }\n}\n\n// 更新表单数据的辅助函数\nfunction updateFormData(userInfo) {\n  if (!userInfo) return\n  \n  userForm.phone = userInfo.phone || ''\n  userForm.email = userInfo.email || ''\n  userForm.gender = userInfo.gender || 0\n  \n  console.log('用户信息已更新:', {\n    phone: userForm.phone,\n    email: userForm.email,\n    gender: userForm.gender\n  })\n}\n\n// 在组件挂载时检查认证状态\nonMounted(async () => {\n  try {\n    await checkAuth()\n  } catch (error) {\n    console.error('初始化认证检查失败:', error)\n  }\n})\n</script>\n\n<style scoped>\n.profile-container {\n  padding: 20px;\n  margin: 0 auto;\n  min-height: 100vh;\n  background: #0B0B2B;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.profile-card {\n  width: 100%;\n  max-width: 800px;\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  margin: 20px;\n  transition: all 0.3s ease;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n}\n\n.profile-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.avatar-container {\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.profile-header h2 {\n  color: #4ECDC4;\n  margin: 0;\n}\n\n.profile-content {\n  padding: 20px;\n  display: grid;\n  grid-template-columns: minmax(300px, 1fr);\n  gap: 20px;\n  margin: 0 auto;\n  max-width: 600px;\n}\n\n:deep(.el-descriptions) {\n  margin-bottom: 30px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  width: 100%;\n  margin: 0 auto 30px;\n}\n\n:deep(.el-form-item) {\n  margin-bottom: 20px;\n  background: rgba(255, 255, 255, 0.05);\n  padding: 20px;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n:deep(.el-form-item:hover) {\n  background: rgba(255, 255, 255, 0.08);\n  transform: translateY(-2px);\n}\n\n:deep(.el-input__wrapper) {\n  background: rgba(255, 255, 255, 0.1);\n  border: none;\n  box-shadow: none;\n}\n\n:deep(.el-input__inner) {\n  color: #fff;\n}\n\n:deep(.el-radio__label) {\n  color: #fff;\n}\n\n/* 响应式布局 */\n@media screen and (min-width: 768px) {\n  .profile-content {\n    grid-template-columns: 1fr;\n  }\n  \n  .profile-content .el-descriptions {\n    grid-column: 1 / -1;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .profile-container {\n    padding: 10px;\n    align-items: flex-start;\n  }\n  \n  .profile-card {\n    margin: 10px;\n    height: auto;\n  }\n  \n  .profile-content {\n    padding: 10px;\n    max-width: 100%;\n  }\n  \n  .avatar-container :deep(.el-avatar) {\n    width: 80px;\n    height: 80px;\n  }\n  \n  .el-form-item {\n    margin-bottom: 15px;\n  }\n\n  :deep(.el-form-item__label) {\n    float: none;\n    display: block;\n    text-align: left;\n    margin-bottom: 8px;\n  }\n  \n  :deep(.el-form-item__content) {\n    margin-left: 0 !important;\n  }\n}\n\n/* 暗色主题适配 */\n:deep(.el-dialog) {\n  background: #1a1a1a;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  margin: 0 auto;\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n:deep(.el-dialog__title) {\n  color: #fff;\n}\n\n:deep(.el-dialog__body) {\n  color: #fff;\n}\n\n/* 按钮样式优化 */\n.action-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 30px;\n  grid-column: 1 / -1;\n  width: 100%;\n}\n\n:deep(.el-button) {\n  backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  transition: all 0.3s ease;\n}\n\n:deep(.el-button:hover) {\n  transform: translateY(-2px);\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n}\n\n/* 头像上传样式优化 */\n.avatar-uploader {\n  position: relative;\n  cursor: pointer;\n  display: inline-block;\n}\n\n.avatar-hover-text {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  opacity: 0;\n  transition: opacity 0.3s;\n  border-radius: 50%;\n  backdrop-filter: blur(2px);\n}\n\n/* 滚动条美化 */\n.profile-container {\n  scrollbar-width: thin;\n  scrollbar-color: rgba(255, 255, 255, 0.2) transparent;\n}\n\n.profile-container::-webkit-scrollbar {\n  width: 6px;\n}\n\n.profile-container::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.profile-container::-webkit-scrollbar-thumb {\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 3px;\n}\n\n.edit-form {\n  margin-top: 20px;\n  padding: 20px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  transition: all 0.3s ease;\n}\n\n.edit-form:hover {\n  background: rgba(255, 255, 255, 0.08);\n}\n</style> ","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=78008c60&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-78008c60\"]])\n\nexport default __exports__"],"names":["updateUserInfo","data","request","url","method","phone","email","gender","withCredentials","headers","updatePassword","oldPassword","newPassword","router","useRouter","userStore","useUserStore","loading","ref","formRef","passwordFormRef","userForm","reactive","userInfo","rules","required","message","trigger","type","pattern","passwordDialog","visible","passwordForm","confirmPassword","passwordRules","min","max","validator","rule","value","callback","Error","formatDate","date","Date","toLocaleString","year","month","day","hour","minute","second","showPasswordDialog","isEditing","formatGender","handleEdit","cancelEdit","handleSave","async","validate","response","state","ElMessage","success","setUserInfo","error","console","warning","handlePasswordChange","log","getCookie","beforeAvatarUpload","file","isJPG","isLt2M","size","handleAvatarSuccess","avatar","handleLogout","logout","push","checkAuth","isLoggedIn","updateFormData","isValid","validateToken","removeCookie","onMounted","__exports__"],"sourceRoot":""}